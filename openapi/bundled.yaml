openapi: 3.1.0
info:
  version: '1'
  title: API
tags:
  - name: Projects
    description: ''
  - name: Products
    description: ''
servers:
  - url: https://api.phixer.net/
security:
  - apiKey_header: []
paths:
  /v1/projects:
    post:
      tags:
        - Projects
      summary: Create a project
      description: ''
      operationId: Create a project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewProject'
      responses:
        '200':
          description: Project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      tags:
        - Projects
      summary: List of projects
      description: ''
      operationId: Retrieve projects
      parameters:
        - name: search
          in: query
          description: Return projects that have fields matching this term.
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: Return projects that have a certain status.
          required: false
          schema:
            type: string
            enum:
              - NEW
              - EDITING
              - COMPLETED
              - ARCHIVED
        - name: per_page
          in: query
          description: The number of items per page. Defaults to 25.
          required: false
          schema:
            type: integer
            default: 25
        - name: page
          in: query
          description: The requested page. Defaults to 1.
          required: false
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: Project
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/projects/{projectId}:
    get:
      tags:
        - Projects
      summary: Retrieve a project
      description: ''
      operationId: Retrieve a project
      parameters:
        - name: projectId
          in: path
          description: ID of project to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Projects
      summary: Delete a project
      description: ''
      operationId: Delete a project
      parameters:
        - name: projectId
          in: path
          description: ID of project to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: No Content
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/products:
    get:
      tags:
        - Products
      summary: List of products
      description: ''
      operationId: List of products
      responses:
        '200':
          description: Product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  securitySchemes:
    apiKey_header:
      type: apiKey
      in: header
      name: Authorization
      description: An API key that will be supplied in a named header. https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.3.md#security-scheme-object
  schemas:
    Project:
      type: object
      properties:
        id:
          type: string
          description: ID of the project.
        external_id:
          type: string
          description: Your internal ID as reference for this project.
        name:
          type: string
          description: The name of the project.
        product_id:
          type: string
          description: ID of the EDITING_STYLE product to associate with this project.
        turnaround_time_id:
          type: string
          description: ID of the TURNAROUND_TIME product to associate with this project.
        notes:
          type: string
          description: Notes for the project.
          required: false
        files:
          type: array
          description: The list of your files
          items:
            type: object
            properties:
              id:
                type: string
                description: ID of the file.
              url:
                type: string
                description: URL of the file.
              version:
                type: integer
                description: Version of the file.
              type:
                type: string
                description: Type of the file.
                enum:
                  - RAW
                  - EDITED
        editing_at:
          type: date-time
          description: The date and time (ISO 8601 format) when the project was edited.
        completed_at:
          type: date-time
          description: The date and time (ISO 8601 format) when the project was completed.
        created_at:
          type: date-time
          description: The date and time (ISO 8601 format) when the project was created.
        updated_at:
          type: date-time
          description: The date and time (ISO 8601 format) when the project was last updated.
        status:
          type: string
          description: The status of the project.
          enum:
            - NEW
            - EDITING
            - COMPLETED
            - ARCHIVED
    Product:
      type: object
      properties:
        id:
          type: string
          description: ID of the product.
        name:
          type: string
          description: The name of the product.
        type:
          type: string
          description: Type of the product.
          enum:
            - EDITING_STYLE
            - TURNAROUND_TIME
    NewProject:
      type: object
      required:
        - name
        - external_id
        - product_id
        - photo_urls
      properties:
        name:
          type: string
          description: The name of the project.
        external_id:
          type: string
          description: Your internal ID as reference for this project.
        product_id:
          type: string
          description: ID of the EDITING_STYLE product to associate with this project.
        turnaround_time_id:
          type: string
          description: ID of the TURNAROUND_TIME product to associate with this project.
        notes:
          type: string
          description: Notes for the project.
          required: false
        photo_urls:
          type: array
          description: The list of public raw photo urls.
          items:
            type: string
    Error:
      type: object
      required:
        - message
      properties:
        message:
          description: A human readable error message
          type: string
