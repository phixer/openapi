openapi: "3.1.0"
info:
    version: "1"
    title: "API"
tags:
    - name: Projects
      description: ""
    - name: Products
      description: ""
servers:
    - url: "https://api.phixer.net/"
security:
  - apiKey_header: []

paths:
    /v1/projects:
        post:
            tags:
                - Projects
            summary: Create a project
            description: ""
            operationId: Create a project
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/NewProject"
            responses:
                "200":
                    description: Project
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Project"

                400:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"

        get:
            tags:
                - Projects
            summary: List of projects
            description: ""
            operationId: Retrieve projects
            parameters:
                - name: search
                  in: query
                  description: Return projects that have fields matching this term.
                  required: false
                  schema:
                    type: string
                - name: status
                  in: query
                  description: Return projects that have a certain status.
                  required: false
                  schema:
                    type: string
                    enum:
                        - NEW
                        - EDITING
                        - COMPLETED
                        - ARCHIVED
                - name: per_page
                  in: query
                  description: The number of items per page. Defaults to 25.
                  required: false
                  schema:
                    type: integer
                    default: 25
                - name: page
                  in: query
                  description: The requested page. Defaults to 1.
                  required: false
                  schema:
                    type: integer
                    default: 1
            responses:
                "200":
                    description: Project
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Project"

                400:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"

    /v1/projects/{projectId}: 
        get:
            tags:
                - Projects
            summary: Retrieve a project
            description: ""
            operationId: Retrieve a project
            parameters:
                - name: projectId
                  in: path
                  description: ID of project to return
                  required: true
                  schema:
                    type: string
                    format: uuid
            responses:
                "200":
                    description: Project
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Project"

                400:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
        delete:
            tags:
                - Projects
            summary: Delete a project
            description: ""
            operationId: Delete a project
            parameters:
                - name: projectId
                  in: path
                  description: ID of project to delete
                  required: true
                  schema:
                    type: string
                    format: uuid
            responses:
                "200":
                    description: No Content

                400:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"

    /v1/products:
        get:
            tags:
                - Products
            summary: List of Editing products
            description: ""
            operationId: List of Editing products
            responses:
                "200":
                    description: Product
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Product"

                400:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"

    /v1/packages:
        get:
            tags:
                - Packages
            summary: List of Photoshoot packages
            description: ""
            operationId: List of Photoshoot packages
            responses:
                "200":
                    description: Package
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Package"

                400:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"

    /v1/photoshoots:
        post: 
            tags:
                - Photoshoots
            summary: Create a Photoshoot project
            description: ""
            operationId: Create a Photoshoot project
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/NewPhotoshoot"
            responses:
                "200":
                    description: Project
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Photoshoot"

                400:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"

        get:
            tags:
                - Photoshoots
            summary: List of Photoshoot projects
            description: ""
            operationId: Retrieve Photoshoot projects
            parameters:
                - name: search
                  in: query
                  description: Return Photoshoot projects that have fields matching this term.
                  required: false
                  schema:
                    type: string
                - name: status
                  in: query
                  description: Return Photoshoot projects that have a certain status.
                  required: false
                  schema:
                    type: string
                    enum:
                        - NEW
                        - CANCELLED
                        - RESCHEDULED
                        - SCHEDULED
                        - EDITING
                        - COMPLETED
                        - ARCHIVED
                - name: per_page
                  in: query
                  description: The number of items per page. Defaults to 25.
                  required: false
                  schema:
                    type: integer
                    default: 25
                - name: page
                  in: query
                  description: The requested page. Defaults to 1.
                  required: false
                  schema:
                    type: integer
                    default: 1
            responses:
                "200":
                    description: Photoshoot
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Photoshoot"

                400:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"

    /v1/photoshoots/{photoshootId}: 
        get:
            tags:
                - Photoshoots
            summary: Retrieve a Photoshoot project
            description: ""
            operationId: Retrieve a Photoshoot project
            parameters:
                - name: photoshootId
                  in: path
                  description: ID of photoshoot project to return
                  required: true
                  schema:
                    type: string
                    format: uuid
            responses:
                "200":
                    description: Photoshoot
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Photoshoot"

                400:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
        delete:
            tags:
                - Photoshoots
            summary: Delete a Photoshoot project
            description: You can only delete photoshoot if the status is `NEW` and `CANCELLED`
            operationId: Delete a Photoshoot project
            parameters:
                - name: photoshootId
                  in: path
                  description: ID of photoshoot project to delete
                  required: true
                  schema:
                    type: string
                    format: uuid
            responses:
                "200":
                    description: No Content

                400:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
    
    /v1/photoshoots/{photoshootId}/cancel:
        post:
            tags:
                - Photoshoots
            summary: Cancel a Scheduled Photoshoot project
            description: ""
            operationId: Cancel a Scheduled Photoshoot project
            parameters:
                - name: photoshootId
                  in: path
                  description: ID of photoshoot project to return
                  required: true
                  schema:
                    type: string
                    format: uuid
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                cancel_reason:
                                    type: string
                                    description: The reason why to cancel.
            responses:
                "200":
                    description: Photoshoot
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Photoshoot"

                400:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"

    /v1/photoshoots/{photoshootId}/reschedule:
        post:
            tags:
                - Photoshoots
            summary: Reschedule a Scheduled Photoshoot project
            description: ""
            operationId: Reschedule a Scheduled Photoshoot project
            parameters:
                - name: photoshootId
                  in: path
                  description: ID of photoshoot project to return
                  required: true
                  schema:
                    type: string
                    format: uuid
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                preferred_date:
                                    type: string
                                    description: The new preferred shoot date and time (ISO 8601 format).

            responses:
                "200":
                    description: Photoshoot
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Photoshoot"

                400:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
components:
    securitySchemes:
        apiKey_header:
            type: apiKey
            in: header
            name: Authorization
            description: An API key that will be supplied in a named header. https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.3.md#security-scheme-object
    schemas:
        Project:
            type: object
            properties:
                id:
                    type: string
                    description: ID of the project.
                    example: a938e733-2c1e-4cd3-b1fd-384d2b5cb695
                external_id:
                    type: string
                    description: Your internal ID as reference for this project.
                    example: 27d001cc-061a-4dcf-81e2-3d5d697844af
                name:
                    type: string
                    description: The name of the project.
                    example: 4070 Georgia St, San Diego, CA 92103, USA
                product_id:
                    type: string
                    description: ID of the EDITING_STYLE product to associate with this project.
                    example: 1
                turnaround_time_id:
                    type: string
                    description: ID of the TURNAROUND_TIME product to associate with this project.
                    example: 2
                notes:
                    type: string
                    description: Notes for the project.
                    example: Water needs to be natural looking (no unrealistic blues), Please keep exterior trees/bushes a lush green (not yellowish)
                files:
                    type: array
                    description: The list of your files
                    items:
                        type: object
                        properties:
                            id:
                                type: string
                                description: ID of the file.
                                example: 6505684f-08b5-4ad0-91bf-3b8c436b8116
                            url:
                                type: string
                                description: URL of the file.
                                example: https://phixer-enterprise-assets.s3.us-west-2.amazonaws.com/projects/6789c0ba-626f-03c1-6822-c320752c02bd/raw/_MG_5184.jpg
                            version:
                                type: integer
                                description: Version of the file.
                                example: 0
                            type:
                                type: string
                                description: Type of the file.
                                enum:
                                    - RAW
                                    - EDITED
                                example: RAW
                editing_at:
                    type: date-time
                    description: The date and time (ISO 8601 format) when the project was edited.
                    example: 2024-12-07T14:00:00.255Z
                completed_at:
                    type: date-time
                    description: The date and time (ISO 8601 format) when the project was completed.
                    example: 2024-12-07T14:00:00.255Z
                created_at:
                    type: date-time
                    description: The date and time (ISO 8601 format) when the project was created.
                    example: 2024-12-07T14:00:00.255Z
                updated_at:
                    type: date-time
                    description: The date and time (ISO 8601 format) when the project was last updated.
                    example: 2024-12-07T14:00:00.255Z
                status:
                    type: string
                    description: The status of the project.
                    enum:
                        - NEW
                        - EDITING
                        - COMPLETED
                        - ARCHIVED
                    example: NEW

        Product:
            type: object
            properties:
                id:
                    type: string
                    description: ID of the product.
                    example: 2f578663-56d2-4466-9498-115f45249f72
                name:
                    type: string
                    description: The name of the product.
                    example: Basic Editing
                type:
                    type: string
                    description: Type of the product.
                    enum:
                        - EDITING_STYLE
                        - TURNAROUND_TIME
                    example: EDITING_STYLE

        NewProject:
            type: object
            required:
                - name
                - external_id
                - product_id
                - photo_urls
            properties:
                name:
                    type: string
                    description: The name of the project.
                external_id:
                    type: string
                    description: Your internal ID as reference for this project.
                product_id:
                    type: string
                    description: ID of the EDITING_STYLE product to associate with this project.
                turnaround_time_id:
                    type: string
                    description: ID of the TURNAROUND_TIME product to associate with this project.
                notes:
                    type: string
                    description: Notes for the project.
                photo_urls:
                    type: array
                    description: The list of public raw photo urls.
                    items:
                        type: string

        NewPhotoshoot:
            type: object
            required:
                - address
                - address_coordinates
                - external_id
                - package_id
                - preferred_photoshoot_date
            properties:
                address:
                    type: string
                    description: The full address of the property.
                address_coordinates:
                    type: object
                    properties:
                        lat:
                            type: string
                            description: the latitude coordinate of the property.
                        lng:
                            type: string
                            description: the longitude coordinate of the property.
                external_id:
                    type: string
                    description: Your internal ID as reference for this photoshoot.
                package_id:
                    type: string
                    description: ID of the Photoshoot Package to associate with this photoshoot.
                preferred_photoshoot_date:
                    type: string
                    description: The preferred shoot date and time (ISO 8601 format).
                notes:
                    type: string
                    description: Notes or instructions for photographer for the photoshoot.
                apt:
                    type: string
                    description: The apartment number of the property.

        Photoshoot:
            type: object
            properties:
                id:
                    type: string
                    description: ID of the photoshoot.
                    example: 056fa34f-fdee-48fe-b3c3-58db76833401
                external_id:
                    type: string
                    description: Your internal ID as reference for this photoshoot.
                    example: a1b20e42-fc47-4a7e-a3c1-ebab3bd119a3
                name:
                    type: string
                    description: The name of the photoshoot project.
                    example: 4070 Georgia St, San Diego, CA 92103, USA
                package_id:
                    type: string
                    description: ID of the Photoshoot Package to associate with this photoshoot.
                    example: 1
                notes:
                    type: string
                    description: Notes or instructions for photographer for the photoshoot.
                    example: "Contact on site is Bill Brasky, His phone number is: 206-999-0909"
                preferred_photoshoot_date:
                    type: string
                    description: The preferred shoot date and time (ISO 8601 format).
                    example: 2024-12-07T14:00:00.255Z
                files:
                    type: array
                    description: The list of your files
                    items:
                        type: object
                        properties:
                            id:
                                type: string
                                description: ID of the file.
                                example: 6505684f-08b5-4ad0-91bf-3b8c436b8116
                            url:
                                type: string
                                description: URL of the file.
                                example: https://phixer-enterprise-assets.s3.us-west-2.amazonaws.com/projects/6789c0ba-626f-03c1-6822-c320752c02bd/raw/_MG_5184.jpg
                            version:
                                type: integer
                                description: Version of the file.
                                example: 0
                            type:
                                type: string
                                description: Type of the file.
                                enum:
                                    - RAW
                                    - EDITED
                                example: RAW
                photographer:
                    $ref: "#/components/schemas/Photographer"
                    description: The photographer assigned to the photoshoot.
                cancelled_reason:
                    type: string
                    description: The reason why the photo shoot is cancelled.
                editing_at:
                    type: date-time
                    description: The date and time (ISO 8601 format) when the project was edited.
                    example: 2024-12-07T14:00:00.255Z
                scheduled_at:
                    type: date-time
                    description: The date and time (ISO 8601 format) when the project was scheduled. 
                    example: 2024-12-07T14:00:00.255Z
                completed_at:
                    type: date-time
                    description: The date and time (ISO 8601 format) when the project was completed.
                    example: 2024-12-07T14:00:00.255Z
                created_at:
                    type: date-time
                    description: The date and time (ISO 8601 format) when the project was created.
                    example: 2024-12-07T14:00:00.255Z
                updated_at:
                    type: date-time
                    description: The date and time (ISO 8601 format) when the project was last updated.
                    example: 2024-12-07T14:00:00.255Z
                status:
                    type: string
                    description: The status of the project.
                    enum:
                        - NEW
                        - CANCELLED
                        - RESCHEDULED
                        - SCHEDULED
                        - EDITING
                        - COMPLETED
                        - ARCHIVED
                    example: NEW
        
        Photographer:
            type: object
            properties:
                id:
                    type: string
                    description: ID of the photographer.
                    example: 570efe86-bc3c-4931-950a-0d018ea0d43a
                first_name:
                    type: string
                    description: The first name of the photographer.
                    example: Johnny
                last_name:
                    type: string
                    description: The last name of the photographer.
                    example: Sinner
                phone:
                    type: string
                    description: The phone number of the photographer
                    example: 313-333-337

        Package:
            type: object
            properties:
                id:
                    type: string
                    description: ID of the photoshoot package.
                    example: 1
                name:
                    type: string
                    description: The name of the photoshoot package.
                    example: Standard Package
                description:
                    type: string
                    description: The description of the photoshoot package.
                    example: 25 Still photos
                
        Error:
            type: object
            required:
                - message
            properties:
                message:
                    description: A human readable error message
                    type: string
